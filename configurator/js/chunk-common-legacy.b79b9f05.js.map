{
    "version": 3,
    "sources": [
      "webpack:///./src/configurator/business-logic/roomle-sdk-wrapper.ts",
      "webpack:///./src/common/plugins/localize.ts",
      "webpack:///./src/configurator/embedding/utils.ts",
      "webpack:///./src/common/translations/local-translation-source.ts",
      "webpack:///./src/common/utils/color.ts",
      "webpack:///./src/common/styles/Global.module.scss",
      "webpack:///./src/common/utils/user-agent.ts",
      "webpack:///./src/common/utils/browser.ts",
      "webpack:///./src/common/utils/init-data.ts",
      "webpack:///./src/common/utils/types.ts",
      "webpack:///./src/configurator/embedding/types.ts",
      "webpack:///./src/common/utils/dom.ts",
      "webpack:///./src/common/utils/helper.ts",
      "webpack:///./src/common/utils/iframe.ts"
    ],
    "names": [
      "RoomleSdkWrapper",
      "_configuratorInstance",
      "_viewerInstance",
      "_plannerInstance",
      "_currentInstance",
      "this",
      "element",
      "initData",
      "api",
      "getApi",
      "switchToConfigurator",
      "pause",
      "Error",
      "resume",
      "getConfigurator",
      "boot",
      "switchToViewer",
      "getGlbViewer",
      "undefined",
      "edit",
      "getPlanner",
      "getRapiAccess",
      "setGlobalInitData",
      "waitingForTranslations",
      "translations",
      "getProperty",
      "o",
      "path",
      "replace",
      "a",
      "split",
      "i",
      "n",
      "length",
      "k",
      "Localize",
      "Vue",
      "options",
      "translationSource",
      "Promise",
      "resolve",
      "getTranslations",
      "then",
      "receivedTranslations",
      "mixin",
      "localizations",
      "t",
      "name",
      "computed",
      "$translations",
      "prototype",
      "NAMESPACE",
      "SDK",
      "CALLBACKS",
      "UI",
      "ANALYTICS",
      "NAMESPACE_SEPARATOR",
      "HANDSHAKE_MESSAGES",
      "REQUEST_BOOT",
      "SETUP",
      "WEBSITE_READY",
      "HIDDEN_METHODS",
      "isExposable",
      "includes",
      "getMethodNames",
      "proto",
      "namespace",
      "isCallback",
      "allMethods",
      "Object",
      "getOwnPropertyNames",
      "subNamespace",
      "filter",
      "map",
      "getConfiguratorSettings",
      "async",
      "configuratorId",
      "server",
      "customApiUrl",
      "currentTenant",
      "overrideTenant",
      "url",
      "apiKey",
      "token",
      "window",
      "btoa",
      "Date",
      "toISOString",
      "createHeaders",
      "headers",
      "locale",
      "language",
      "device",
      "platform",
      "Headers",
      "request",
      "Request",
      "method",
      "mode",
      "cache",
      "response",
      "fetch",
      "configurator",
      "json",
      "LocalTranslationSource",
      "overrideTranslation",
      "_locale",
      "_overrideTranslation",
      "e",
      "console",
      "error",
      "_getFallbackTranslations",
      "hex2Rgb",
      "hex",
      "value",
      "join",
      "result",
      "exec",
      "r",
      "parseInt",
      "g",
      "b",
      "luminanace",
      "Math",
      "pow",
      "contrast",
      "rgb1",
      "rgb2",
      "lum1",
      "lum2",
      "brightest",
      "max",
      "darkest",
      "min",
      "getHigherContrastColor",
      "color",
      "possiblity1",
      "possiblity2",
      "debug",
      "primaryColor",
      "warn",
      "possibleError",
      "black",
      "white",
      "contrastWithBlack",
      "contrastWithWhite",
      "prepareSkin",
      "blackText",
      "whiteText",
      "skin",
      "rgbValues",
      "module",
      "exports",
      "isIOs",
      "test",
      "navigator",
      "maxTouchPoints",
      "MSStream",
      "hasARQuicklook",
      "isAndroid",
      "document",
      "createElement",
      "relList",
      "supports",
      "isInAppBrowser",
      "standalone",
      "userAgent",
      "toLowerCase",
      "isSafari",
      "BROWSER_LANGUAGE_PROPERTY_KEYS_KNOWN",
      "getLanguage",
      "lang",
      "substr",
      "Array",
      "isArray",
      "languages",
      "CONFIGURATOR_IDLE",
      "getInitData",
      "useFallbackId",
      "urlParams",
      "URLSearchParams",
      "location",
      "search",
      "forEach",
      "key",
      "setProperty",
      "castInitData",
      "id",
      "isItem",
      "castAndFixInitData",
      "decodeURIComponent",
      "emails",
      "shareUrl",
      "deeplink",
      "LEGACY_SHARE_PLACEHOLDER",
      "SHARE_PLACEHOLDER",
      "obj",
      "keys",
      "entry",
      "getEmbeddingInitData",
      "messageHandler",
      "sendMessage",
      "getRemoteInitData",
      "rapiAccess",
      "tenant",
      "settings",
      "remoteInitData",
      "getFallbackInitData",
      "fallbackInitData",
      "hostname",
      "combineInitData",
      "sdkWrapper",
      "queryParamsInitData",
      "embeddingInitData",
      "finalInitData",
      "parts",
      "last",
      "pop",
      "actualObject",
      "p",
      "USER_ACTION_MODULE",
      "USER_ACTION",
      "UI_BUTTON",
      "DIRECTION",
      "isScrolledToRightEnd",
      "threshold",
      "scrollWidth",
      "offsetWidth",
      "scrollLeft",
      "_hasOverflow",
      "direction",
      "offsetKey",
      "HORIZONTAL",
      "scrollKey",
      "hasVerticalOverflow",
      "VERTICAL",
      "hasHorizontalOverflow",
      "lastVisibleElement",
      "container",
      "children",
      "containerBoundingClientRect",
      "getBoundingClientRect",
      "containerWidth",
      "left",
      "width",
      "lastVisibleChild",
      "child",
      "childClientRect",
      "cssVariableToNumber",
      "cssVariable",
      "parseFloat",
      "remToPixel",
      "remValue",
      "remBase",
      "percentInStringToFloat",
      "percentInString",
      "animationDurationInMsToFloat",
      "animationDuration",
      "calcIsDesktop",
      "innerWidth",
      "LOADING_SCREEN_CLASSES",
      "CONTAINER",
      "ANIMATION_CONTAINER",
      "OPACITY",
      "HIDE",
      "ANIMATION_1",
      "ANIMATION_2",
      "GLTF_LOADER",
      "CIRCLE_PROGRESS",
      "FADE_OUT_DELAY",
      "LOADING_SCREEN_CSS",
      "TRANSITION",
      "removeLoadingScreen",
      "loadingScreen",
      "querySelector",
      "style",
      "transition",
      "classList",
      "add",
      "animations",
      "querySelectorAll",
      "remove",
      "showLoadingScreen",
      "copyToClipboard",
      "text",
      "input",
      "inputId",
      "body",
      "appendChild",
      "editable",
      "contentEditable",
      "readOnly",
      "range",
      "createRange",
      "selectNodeContents",
      "selection",
      "getSelection",
      "removeAllRanges",
      "addRange",
      "setSelectionRange",
      "select",
      "execCommand",
      "removeChild",
      "setLoadingProgress",
      "percent",
      "loadingContainer",
      "circle",
      "radius",
      "baseVal",
      "circumference",
      "PI",
      "contains",
      "strokeDasharray",
      "strokeDashoffset",
      "offset",
      "round",
      "toString",
      "hideLoadingCircle",
      "throttle",
      "func",
      "delay",
      "time",
      "called",
      "skippedCalls",
      "trailingCall",
      "_args",
      "now",
      "apply",
      "arguments",
      "setInterval",
      "clearInterval",
      "float",
      "precision",
      "factor",
      "isIdAnItem",
      "isIdAPlan",
      "getImageURL",
      "size",
      "step",
      "encodeURIComponent",
      "addMetaHeaderTag",
      "attributes",
      "head",
      "htmlMetaElement",
      "setAttribute",
      "attribute",
      "uuid",
      "random",
      "snakeCase",
      "str",
      "m",
      "deepCopy",
      "JSON",
      "parse",
      "stringify",
      "toBoolean",
      "defaultValue",
      "wait",
      "delayInMs",
      "setTimeout",
      "deepMergeCopy",
      "obj1",
      "obj2",
      "deepMerge",
      "constructor",
      "NAMES_FOR_LOCALHOST",
      "getHostname",
      "isIframe",
      "href",
      "referrer",
      "URL",
      "isDemoHostname",
      "endsWith",
      "scriptInfo",
      "args",
      "info",
      "getGlbAssetUrl",
      "assets",
      "glTF",
      "glb",
      "getUsdzAssetUrl",
      "usdz",
      "hasArAssets",
      "item",
      "formatPrice",
      "currencySymbol",
      "price",
      "prefix",
      "toLocaleString",
      "minimumFractionDigits",
      "maximumFractionDigits",
      "ROUNDING_DECIMALS",
      "normalizeFloatingNumber",
      "num",
      "decimals",
      "Number",
      "EPSILON",
      "checkForActivePackage",
      "packages",
      "find",
      "activePackage",
      "package",
      "oneTimeInterval",
      "callback",
      "intervalId",
      "runOnIdle",
      "requestIdleCallback",
      "createShareLinkFromUrl",
      "actualUrl",
      "separator",
      "idQueryParam",
      "idQueryParamWithPlaceholder",
      "hasId",
      "RegExp",
      "isLocationJestTest",
      "isInIframe",
      "self",
      "top",
      "useEmbeddingApi",
      "sameOrigin",
      "parent"
    ],
    "mappings": "gHAAA,kDAcM,MAAOA,EAAb,cAEU,KAAAC,sBAAgD,KAChD,KAAAC,gBAAuC,KACvC,KAAAC,iBAAsC,KAEtC,KAAAC,iBAAmC,KAEtB,iBACnB,QAASC,KAAKF,iBAGY,sBAACG,EAAsBC,G,QACjD,GAAIF,KAAKF,iBAAkB,CACzB,MAAMK,QAAYH,KAAKF,iBAAiBM,SACxC,aAAaD,EAAIE,uBAEnB,GAAIL,KAAKJ,sBAAuB,CAE9B,GADqB,QAArB,EAAAI,KAAKD,wBAAgB,SAAEO,SAClBL,EACH,MAAM,IAAIM,MAAM,yEAGlB,OADAP,KAAKJ,sBAAsBY,OAAOP,GAC3BD,KAAKJ,sBAOd,OAJAI,KAAKJ,4BAA8B,OAAUa,gBAAgBP,GAC7DF,KAAKJ,sBAAsBc,OACN,QAArB,EAAAV,KAAKD,wBAAgB,SAAEO,QACvBN,KAAKD,iBAAmBC,KAAKJ,sBACtBI,KAAKJ,sBAGW,mBAACK,EAAsBC,G,QAC9C,GAAIF,KAAKF,iBAAkB,CACzB,MAAMK,QAAYH,KAAKF,iBAAiBM,SACxC,aAAaD,EAAIQ,iBAEnB,GAAIX,KAAKH,gBAAiB,CAExB,GADqB,QAArB,EAAAG,KAAKD,wBAAgB,SAAEO,SAClBL,EACH,MAAM,IAAIM,MAAM,mEAGlB,OADAP,KAAKH,gBAAgBW,OAAOP,GACrBD,KAAKH,gBAMd,OAJAG,KAAKH,sBAAwB,OAAUe,aAAaV,GAC/B,QAArB,EAAAF,KAAKD,wBAAgB,SAAEO,QACvBN,KAAKH,gBAAgBa,OACrBV,KAAKD,iBAAmBC,KAAKH,gBACtBG,KAAKH,gBAGS,iBAACI,EAAsBC,G,QAC5C,GAAIF,KAAKF,iBAAkB,CAEzB,GADqB,QAArB,EAAAE,KAAKD,wBAAgB,SAAEO,SAClBL,EACH,MAAM,IAAIM,MAAM,mEAGlB,OADAP,KAAKF,iBAAiBU,OAAOP,GACtBD,KAAKF,iBAYd,OAVKI,IACHA,EAAW,SAESW,IAAlBX,EAASY,OACXZ,EAASY,MAAO,GAElBd,KAAKF,uBAAyB,OAAUiB,WAAWb,GAC9B,QAArB,EAAAF,KAAKD,wBAAgB,SAAEO,QACvBN,KAAKF,iBAAiBY,OACtBV,KAAKD,iBAAmBC,KAAKF,iBACtBE,KAAKF,iBAGY,sBACxB,aAAa,OAAUkB,gBAGlB,kBAAkBd,GAClBA,IACHA,EAAW,IAEb,OAAUe,kBAAkBf,M,oCCjGhC,IACIgB,EADAC,EAAoB,GAGxB,MAAMC,EAAc,CAACC,EAAWC,KAC9BA,EAAOA,EAAKC,QAAQ,aAAc,OAClCD,EAAOA,EAAKC,QAAQ,MAAO,IAC3B,MAAMC,EAAIF,EAAKG,MAAM,KACrB,IAAK,IAAIC,EAAI,EAAGC,EAAIH,EAAEI,OAAQF,EAAIC,IAAKD,EAAG,CACxC,MAAMG,EAAIL,EAAEE,GACZ,KAAIG,KAAKR,GAGP,OAFAA,EAAKA,EAAUQ,GAKnB,OAAOR,GAGHS,EAAgB,CACpB,QAAQC,EAAUC,GACZA,EAAQC,oBACVf,EAAyB,IAAIgB,QAAkBC,IAC7CH,EAAQC,kBAAkBG,kBAAkBC,KAAMC,IAChDnB,EAAemB,EACfH,EAAQhB,QAIdY,EAAIQ,MAAM,CACR,OACE,MAAO,CACLC,cAAe,CACbC,EAAIC,GACKA,KAKfC,SAAU,CACR,IAME,OALC3C,KAAa4C,cAAcP,KAAMI,IAC/BzC,KAAawC,cAAcC,EAAKC,GACxBtB,EAAYqB,EAAGC,KAGlB1C,KAAawC,kBAI3BT,EAAIc,UAAUD,cAAgB1B,IAInB,U,oCClDf,0KAAO,MAAM4B,EAAyE,CACpFC,IAAK,WACLC,UAAW,YACXC,GAAI,KACJC,UAAW,aAGAC,EAAsB,IAGtBC,GAFeN,EAAUC,IAA4BD,EAAUE,UAE1C,CAChCK,aAAc,cACdC,MAAO,QACPC,cAAe,iBAGXC,EAAiB,CAAC,cAAe,aAC1BC,EAAef,GAA6B,MAAZA,EAAK,KAAec,EAAeE,SAAShB,GAE5EiB,EAAiB,CAACC,EAAYC,EAAmBC,GAAsB,KAClF,IAAKF,EACH,MAAO,GAET,MAAMG,EAAaC,OAAOC,oBAAoBL,GACxCM,EAAeJ,EAAahB,EAAUE,UAAYG,EAAsB,GAC9E,OAAOY,EAAWI,OAAOV,GAAaW,IAAK1B,GAASmB,EAAYV,EAAsBe,EAAexB,IAG1F2B,EAA0BC,MAAOC,EAAwBrE,KACpE,GAA8B,kBAAnBqE,EACT,MAAM,IAAIhE,MAAM,iDAAoDgE,EAAkB,KAExF,MAAMC,EAAStE,EAASuE,aAAevE,EAASuE,aAAe,4BACzDC,EAAgBxE,EAASyE,gBAAkB,EAC3CC,EAAMJ,EAAS,kBAAoBD,EACnCM,EAAS,mBACTC,EAAQ,MAAQC,OAAOC,MAAM,IAAIC,MAAQC,cAAgB,cAAgBL,GACzEM,EAAgB,KACpB,MAAMC,EAAe,CACnBP,SACAH,gBACAW,OAAQ,KACRC,SAAU,KACVC,OAAQ,EACRT,QACAU,SAAU,OAEZ,OAAO,IAAIC,QAAQL,IAGfM,EAAU,IAAIC,QAAQf,EAAK,CAC/BgB,OAAQ,MACRR,QAASD,IACTU,KAAM,OACNC,MAAO,YAEHC,QAAiBC,MAAMN,IACvB,aAACO,SAAsBF,EAASG,OACtC,OAAOD,I,oCC5DT,kDAEc,MAAOE,EAKnB,YAAYd,EAAgBe,GAC1BpG,KAAKqG,QAAUhB,EACXe,IACFpG,KAAKsG,qBAAuBF,EAAoBpG,KAAKqG,UAI7B,wBAC1B,IACE,MAAMN,QAAiBC,MAAM,kBAAoBhG,KAAKqG,QAAU,SAC1DH,QAAaH,EAASG,OAI5B,OAHIlG,KAAKsG,sBACP,eAAUJ,EAAMlG,KAAKsG,sBAEhBJ,EACP,MAAOK,GAEP,OADAC,QAAQC,MAAM,yBAA2BzG,KAAKqG,QAAU,yBACjDrG,KAAK0G,4BAIsB,iCACpC,IACE,MAAMX,QAAiBC,MAAM,0BACvBE,QAAaH,EAASG,OAI5B,OAHIlG,KAAKsG,sBACP,eAAUJ,EAAMlG,KAAKsG,sBAEhBJ,EACP,MAAOK,GAEP,OADAC,QAAQC,MAAMF,GACP,O,oCCvCb,kCAWA,MAAMI,EAAWC,IACI,kBAARA,GAAmC,IAAfA,EAAIhF,SAGjCgF,EAAM,IAAIA,GAAKxC,IAAKyC,GAAUA,EAAQA,GAAOC,KAAK,IAAIvF,QAAQ,KAAM,MAEtE,MAAMwF,EAAS,4CAA4CC,KAAKJ,GAChE,OAAOG,EAAS,CACdE,EAAGC,SAASH,EAAO,GAAI,IACvBI,EAAGD,SAASH,EAAO,GAAI,IACvBK,EAAGF,SAASH,EAAO,GAAI,KACrB,MAGAM,EAAa,EAAEJ,IAAGE,IAAGC,QACzB,MAAM5F,EAAI,CAACyF,EAAGE,EAAGC,GAAGhD,IAAKyC,IACvBA,GAAgB,IACTA,GAAS,OAAUA,EAAQ,MAAQS,KAAKC,KAAKV,EAAQ,MAAS,MAAO,OAE9E,MAAc,MAAPrF,EAAE,GAAqB,MAAPA,EAAE,GAAqB,MAAPA,EAAE,IAGrCgG,EAAW,CAACC,EAAkBC,KAClC,MAAMC,EAAON,EAAWI,GAClBG,EAAOP,EAAWK,GAClBG,EAAYP,KAAKQ,IAAIH,EAAMC,GAC3BG,EAAUT,KAAKU,IAAIL,EAAMC,GAC/B,OAAQC,EAAY,MAASE,EAAU,MAGnCE,EAAyB,CAACC,EAAeC,EAAqBC,EAAqBC,KACvF,MAAMC,EAAe3B,EAAQuB,GAC7B,IAAKI,EAEH,OADA9B,QAAQ+B,KAAK,QAAUF,EAAQ,iFAAmFA,EAAQ,uCACnH,KAET,MAAMG,EAAgB,sDAChBC,EAAQ9B,EAAQwB,GACtB,IAAKM,EAEH,OADAjC,QAAQ+B,KAAKC,EAAgBL,EAAc,KACpC,KAET,MAAMO,EAAQ/B,EAAQyB,GACtB,IAAKM,EAEH,OADAlC,QAAQ+B,KAAKC,EAAgBJ,EAAc,KACpC,KAGT,MAAMO,EAAoBnB,EAASc,EAAcG,GAC3CG,EAAoBpB,EAASc,EAAcI,GACjD,OAAQC,EAAoBC,EAAqBT,EAAcC,GAGpDS,EAAc,CAAC3I,EAAsB4I,EAAmBC,K,kBACnE,GAAiB,QAAjB,EAAI7I,EAAS8I,YAAI,eAAG,iBAAkB,CACpC,MAAMC,EAAYtC,EAAQzG,EAAS8I,KAAK,kBACxC,GAAIC,EAAW,CACb,MAAM,EAAChC,EAAD,EAAIE,EAAJ,EAAOC,GAAK6B,EAClB/I,EAAS8I,KAAK,wBAA0B/B,EAAI,IAAME,EAAI,IAAMC,GAOhE,IAJiB,QAAb,EAAAlH,EAAS8I,YAAI,eAAG,qBAAkC,QAAd,EAAC9I,EAAS8I,YAAI,eAAG,gBACvD9I,EAAS8I,KAAK,aAAe9I,EAAS8I,KAAK,mBAG5B,QAAb,EAAA9I,EAAS8I,YAAI,eAAG,qBAAkC,QAAd,EAAC9I,EAAS8I,YAAI,eAAG,qBAAqB,CAC5E,MAAMd,EAAQD,EAAuB/H,EAAS8I,KAAK,iBAAkBF,EAAWC,EAAW,WACvFb,IACFhI,EAAS8I,KAAK,oBAAsBd,GAIxC,IAAiB,QAAb,EAAAhI,EAAS8I,YAAI,eAAG,iBAA8B,QAAd,EAAC9I,EAAS8I,YAAI,eAAG,iBAAiB,CACpE,MAAMd,EAAQD,EAAuB/H,EAAS8I,KAAK,aAAcF,EAAWC,EAAW,OACnFb,IACFhI,EAAS8I,KAAK,gBAAkBd,GAI/BhI,EAAS8I,OACZ9I,EAAS8I,KAAO,M,uBC1FpBE,EAAOC,QAAU,CAAC,kBAAoB,SAAS,UAAY,UAAU,UAAY,S,oCCCjF,wIAEO,MAAMC,EAAQ,KAAO,oBAAoBC,KAAKC,UAAU9D,WAAqC,aAAvB8D,UAAU9D,UAA2B8D,UAAUC,eAAiB,KAAQxE,OAAOyE,SAE/IC,EAAiB,KAC5B,GAAIC,IACF,OAAO,KAET,GAAIN,IACF,IAGE,MAAM5H,EAAImI,SAASC,cAAc,KACjC,OAAOpI,EAAEqI,QAAQC,SAAS,MAC1B,MAAOvD,GAEP,OADAC,QAAQC,MAAMF,IACP,EAGX,OAAO,MAGIwD,EAAiB,KAC5B,GAAIL,IACF,OAAO,KAET,IAEE,MAAMM,EAAcjF,OAAOuE,UAAkBU,WACvCC,EAAYlF,OAAOuE,UAAUW,UAAUC,cACvCC,EAAW,SAASd,KAAKY,GAC/B,GAAIb,IACF,OAAQY,IAAeG,EAEzB,MAAO5D,GAEP,OADAC,QAAQC,MAAMF,GACP,KAET,OAAO,MAGImD,EAAY,IAAM,aAAaL,KAAKC,UAAUW,Y,oKCzCpD,MAAMG,EAAuC,CAAC,WAAY,kBAAmB,eAAgB,kBAEvFC,EAAc,CAACC,EAAyB,QACnD,MAAMhB,EAAYvE,OAAOuE,UAEzB,GAAIgB,EACF,OAAOA,EAAKC,OAAO,EAAG,GAGxB,GAAIC,MAAMC,QAAQnB,EAAUoB,YAAcpB,EAAUoB,UAAU9I,OAAS,EACrE,OAAO0H,EAAUoB,UAAU,GAAGH,OAAO,EAAG,GAG1C,IAAK,IAAI7I,EAAI,EAAGE,EAASwI,EAAqCxI,OAAQF,EAAIE,EAAQF,IAAK,CACrF,MAAM4D,EAAYgE,EAAkBc,EAAqC1I,IACzE,GAAI4D,EACF,OAAOA,EAASiF,OAAO,EAAG,GAI9B,MAAO,MCZII,EAAoB,SAGpBC,EAAc,CAACC,GAAyB,KACnD,MAAMC,EAAY,IAAIC,gBAAgBhG,OAAOiG,SAASC,QAGhD/K,EAAgB,GAGtB,OAFA4K,EAAUI,QAAQ,CAACrE,EAAOsE,IAAQC,EAAYlL,EAAUiL,EAAKtE,IAC7DwE,EAAanL,GACR2K,GAGA3K,EAASoL,KACZpL,EAASoL,GAAK,kBAEQzK,IAApBX,EAASqL,SACXrL,EAASqL,OAAS,eAAWrL,EAASoL,KAEjCpL,GAREA,GAWEsL,EAAsBtL,IACjCmL,EAAanL,IACD,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUuE,gBACZvE,EAASuE,aAAegH,mBAAmBvL,EAASuE,oBAE9B5D,IAApBX,EAASwL,SACXxL,EAASwL,QAAS,GAEhBxL,EAASyL,WACXzL,EAAS0L,SAAW1L,EAASyL,SAASpK,QAAQsK,EAA0BC,IAEnE5L,GAGImL,EAAgBU,IAC3B,IAAKA,EACH,OAEF,MAAMC,EAAOhI,OAAOgI,KAAKD,GACzB,IAAK,MAAMZ,KAAOa,EAAM,CACtB,MAAMnF,EAAQkF,EAAIZ,GAGlB,IAAKX,MAAMC,QAAQ5D,IAA2B,kBAAVA,GAAgC,OAAVA,EACxD,OAAOwE,EAAaxE,GAEtB,GAAI2D,MAAMC,QAAQ5D,GAAQ,CACxB,IAAK,MAAMoF,KAASpF,EAClBwE,EAAaY,GAEf,OAGY,SAAVpF,GAA8B,UAAVA,IACtBkF,EAAIZ,GAAiB,SAAVtE,KAmBJqF,EAAuB5H,UAClC,MAAMpE,QAAiBiM,EAAeC,YAAY,OAAmB/I,cAarE,OAZInD,EAASoL,SAA0BzK,IAApBX,EAASqL,SAC1BrL,EAASqL,OAAS,eAAWrL,EAASoL,KAWjCE,EAAmBtL,IAGfmM,EAAoB/H,MAAOgI,EAAwB/H,KAC9D,MAAM,GAAC+G,EAAD,OAAKiB,EAAL,SAAaC,EAAW,UAAYF,EAAWjI,wBAAwBE,GACvEkI,EAAiBD,EAQvB,OAPAC,EAAelI,eAAiB+G,GAC3BmB,EAAe9H,gBAAkB4H,IAIpCE,EAAe9H,eAAiB4H,GAE3Bf,EAAmBiB,IAGfC,EAAsB,KACjC,MAAMC,EAAmB,GACpBA,EAAiBtH,SACpBsH,EAAiBtH,OAASgF,KAExBsC,EAAiBrB,KAAOX,UACnBgC,EAAiBrB,GAG1B,MAAMsB,EAAW,iBAOjB,OANIA,GAAY,eAAeA,KAC7BD,EAAiBpI,eAAiB,oBAGpCoI,EAAiBlI,aAAe,gCAChCkI,EAAiBjB,QAAS,EACnBiB,GAGId,EAA2B,YAC3BC,EAAoB,oBAYpBe,EAAkBvI,MAAO6H,EAA0CW,EAA8BC,KAC5GvB,EAAmBuB,GACnB,MAAMJ,EAAmBD,IAEzB,IAAIM,EAAoB,KACpBb,IACFa,QAA0Bd,EAAqBC,IAGjDW,EAAW7L,kBAAkB,eAAc,eAAc0L,EAAkBK,GAAoBD,IAC/F,MAAMT,QAAmBQ,EAAW9L,gBAE9BuD,EAAiBwI,EAAoBxI,iBAAmC,OAAjByI,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBzI,iBAAkBoI,EAAiBpI,eACnH,IAAKA,EACH,MAAM,IAAIhE,MAAM,mGAElB,MAAMkM,QAAuBJ,EAAkBC,EAAY/H,GAErD0I,EAAgB,eAAc,eAAc,eAAcN,EAAkBF,GAAiBO,GAAoBD,GAEvH,OADAD,EAAW7L,kBAAkBgM,GACtBA,GAGI7B,EAAc,CAAC/J,EAAyBC,EAAcuF,KACjE,GAAiB,kBAANxF,EACT,OAEF,MAAM6L,EAAQ5L,EAAKG,MAAM,KACnB0L,EAAOD,EAAME,MACnB,IAAIC,EAAehM,EACnB,IAAK,MAAMiM,KAAKJ,EACTG,EAAaC,KAChBD,EAAaC,GAAK,IAEpBD,EAAeA,EAAaC,GAE9BD,EAAaF,GAAQtG,I,oCChLvB,IAAkB0G,EAIAC,EAJlB,6EAAkBD,GAChB,sCADF,CAAkBA,MAAkB,KAIpC,SAAkBC,GAChB,mCACA,gCAFF,CAAkBA,MAAW,M,kCCR7B,IAAYC,EAAZ,2CAAYA,GACV,aACA,yBACA,+BACA,6BACA,6BACA,+BACA,+BACA,qBACA,qCACA,+BACA,2BACA,qCACA,qCACA,yBACA,0BAfF,CAAYA,MAAS,M,kCCHrB,geAMWC,EANX,qCAMA,SAAWA,GACT,8BACA,mCAFF,CAAWA,MAAS,KAKb,MAAMC,EAAuB,CAAC1N,EAAgC2N,EAAoB,KACvF,IAAK3N,EACH,OAAO,EAET,MAAM,YAAC4N,EAAD,YAAcC,EAAd,WAA2BC,GAAc9N,EAC/C,OAAQ8N,EAAaD,GAAgBD,EAAcD,GAG/CI,EAAe,CAAC/N,EAAsBgO,KAC1C,IAAKhO,EACH,OAAO,EAET,MAAMiO,EAAaD,IAAcP,EAAUS,WAAc,cAAgB,eACnEC,EAAaH,IAAcP,EAAUS,WAAc,cAAgB,eACzE,OAAOlO,EAAQiO,GAAajO,EAAQmO,IAGzBC,EAAuBpO,GAC3B+N,EAAa/N,EAASyN,EAAUY,UAG5BC,EAAyBtO,GAC7B+N,EAAa/N,EAASyN,EAAUS,YAG5BK,EAAqB,CAACC,EAAwBb,EAAoB,KAC7E,MAAMc,EAAWD,EAAUC,SACrB9M,EAAS8M,EAAS9M,OACxB,IAAKA,EACH,OAAO,KAGT,MAAM+M,EAA8BF,EAAUG,wBACxCC,EAAiBF,EAA4BG,KAAOH,EAA4BI,MACtF,IAAIC,EAAmBN,EAAS9M,EAAS,GACzC,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC/B,MAAMuN,EAAQP,EAAShN,GACjBwN,EAAkBD,EAAML,wBAC9B,GAAIM,EAAgBJ,KAAOlB,EAAYiB,EACrC,OAAOG,EAETA,EAAmBC,EAErB,OAAOD,GAGIG,EAAuBC,GAAwBC,WAAWD,EAAY7N,QAAQ,cAAe,KAE7F+N,EAAa,CAACC,EAAkBC,IAAoBH,WAAWE,EAAShO,QAAQ,MAAO,KAAOiO,EAE9FC,EAA0BC,GAAoCL,WAAWK,EAAgBnO,QAAQ,IAAK,KAAO,IAC7GoO,EAAgCC,GAAsCP,WAAWO,EAAkBrO,QAAQ,KAAM,KAEjHsO,EAAgB,IAAM9K,OAAO+K,YAAc5I,SAAS,uBAAkB3F,QAAQ,KAAM,IAAK,IAEhGwO,EAAyB,CAC7BC,UAAW,cACXC,oBAAqB,cACrBC,QAAS,yBACTC,KAAM,oBACNC,YAAa,iBACbC,YAAa,iBACbC,YAAa,cACbC,gBAAiB,yBAGbC,EAAiB,IACjBC,EAAqB,CACzBC,WAAY,uBAAyBF,EAAiB,MAG3CG,EAAsBrM,UACjC,MAAMsM,EAAgBjH,SAASkH,cAA2B,IAAMd,EAAuBC,WACvF,GAAIY,EAAe,CAGjB,GAFAA,EAAcE,MAAMC,WAAaN,EAAmBC,iBAC9C,eAAK,IACNE,EACH,OAIF,GAFAA,EAAcI,UAAUC,IAAIlB,EAAuBG,eAC7C,eAAKM,IACNI,EACH,OAEFA,EAAcI,UAAUC,IAAIlB,EAAuBI,MAEnD,MAAMe,EAAaN,EAAcO,iBAA8B,IAAMpB,EAAuBE,qBAC5FiB,EAAW,GAAGF,UAAUI,OAAOrB,EAAuBK,aACtDc,EAAW,GAAGF,UAAUI,OAAOrB,EAAuBM,eAI7CgB,EAAoB/M,UAC/B,MAAMsM,EAAgBjH,SAASkH,cAA2B,IAAMd,EAAuBC,WACvF,GAAIY,EAAe,CACjBA,EAAcE,MAAMC,WAAaN,EAAmBC,iBAC9C,eAAK,GACXE,EAAcI,UAAUI,OAAOrB,EAAuBI,MACtDS,EAAcI,UAAUI,OAAOrB,EAAuBG,SACtD,MAAMgB,EAAaN,EAAcO,iBAA8B,IAAMpB,EAAuBE,qBAC5FiB,EAAW,GAAGF,UAAUC,IAAIlB,EAAuBK,aACnDc,EAAW,GAAGF,UAAUC,IAAIlB,EAAuBM,eAI1CiB,EAAmBC,IAC9B,MAAMC,EAAQ7H,SAASC,cAAc,SAC/B6H,EAAU,6BAKhB,GAJAD,EAAMlG,GAAKmG,EACXD,EAAM3K,MAAQ0K,EACd5H,SAAS+H,KAAKC,YAAYH,GAEtB,iBAAS,CACX,MAAMI,EAAWJ,EAAMK,gBACjBC,EAAWN,EAAMM,SAEvBN,EAAMK,gBAAkB,OACxBL,EAAMM,UAAW,EAEjB,MAAMC,EAAQpI,SAASqI,cACvBD,EAAME,mBAAmBT,GAEzB,MAAMU,EAAYnN,OAAOoN,eAChB,OAATD,QAAS,IAATA,KAAWE,kBACF,OAATF,QAAS,IAATA,KAAWG,SAASN,GAEpBP,EAAMc,kBAAkB,EAAG,QAC3Bd,EAAMK,gBAAkBD,EACxBJ,EAAMM,SAAWA,OAEjBN,EAAMe,SAER,IACE5I,SAAS6I,YAAY,QACrB,MAAOjM,GACPC,QAAQC,MAAM,yCAA4CF,EAAI,KAGhEoD,SAAS+H,KAAKe,YAAYjB,IAGfkB,EAAsBC,IAEjC,MAAMC,EAAmBjJ,SAASkH,cAA2B,IAAMd,EAAuBC,UAAY,KAAOD,EAAuBO,aAC9HuC,EAASlJ,SAASkH,cAAgC,IAAMd,EAAuBQ,iBAC/EuC,EAASD,EAAO5L,EAAE8L,QAAQlM,MAC1BmM,EAAyB,EAATF,EAAaxL,KAAK2L,GAEpCL,EAAiB5B,UAAUkC,SAASnD,EAAuBI,QAC7D0C,EAAO/B,MAAMqC,gBAAkB,GAAGH,KAAiBA,IACnDH,EAAO/B,MAAMsC,iBAAmB,GAAGJ,EACnCJ,EAAiB5B,UAAUI,OAAOrB,EAAuBI,OAG3D,MAAMkD,EAASL,EAAgBL,EAAUK,EACzCH,EAAO/B,MAAMsC,iBAAmB9L,KAAKgM,MAAMD,GAAQE,YAIxCC,EAAoB,KAC/B,MAAMZ,EAAmBjJ,SAASkH,cAA2B,IAAMd,EAAuBC,UAAY,KAAOD,EAAuBO,aACpIsC,EAAiB5B,UAAUC,IAAIlB,EAAuBI,Q,kCC3KxD,k7BAIO,MAAMsD,EAAW,CAAoCC,EAASC,EAAgB,MACnF,IAAIC,EACAC,GAAS,EACTC,EAAe,EACfC,EAA8B,KAClC,OAAO,YAAsBC,GACtBJ,IACHA,EAAO3O,KAAKgP,QAETJ,GAAWD,EAAOD,EAAQ1O,KAAKgP,MAAS,GAC3CP,EAAKQ,MAAMlU,KAAM,IAAImU,YACrBP,EAAO3O,KAAKgP,MACZJ,GAAS,GAETC,IAEGC,IACHA,EAAeK,YAAY,KACrBN,GACFJ,EAAKQ,MAAMlU,KAAM,IAAImU,YAEvBL,EAAe,EACfO,cAAcN,GACdA,EAAe,MACdJ,MAKIL,EAAQ,CAACgB,EAAeC,KACnC,IAAmB,IAAfA,EACF,OAAOD,EAET,MAAME,EAASlN,KAAKC,IAAI,GAAIgN,GAC5B,OAAOjN,KAAKgM,MAAMgB,EAAQE,GAAUA,GAGzBC,EAAcnJ,GAAeA,EAAG7J,MAAM,KAAKG,OAAS,IAAM,EAE1D8S,EAAapJ,GAAeA,EAAG7J,MAAM,KAAKG,OAAS,GAAK,EASxD+S,EAAc,CAAC/P,EAAagQ,EAAO,GAAIC,EAAO,KAElD,wDAA0DA,EAAO,MAAQD,EAAO,MAAQA,EAAO,oBAAsBE,mBAAmBlQ,GAQpImQ,EAAmB,CAACzJ,EAAY0J,KAC3C,IAAKA,GAAcrL,SAASsL,KAAKpE,cAAc,IAAMvF,GACnD,OAEF,MAAM4J,EAAkBvL,SAASC,cAAc,QAC/CsL,EAAgBC,aAAa,KAAM7J,GACnC0J,EAAW9J,QAASkK,IAClBF,EAAgBC,aAAaC,EAAUjK,IAAKiK,EAAUvO,SAExD8C,SAASsL,KAAKtD,YAAYuD,IAGfG,EAAO,CAAC7T,EAAsB,OAElCA,GAAK0F,SAAS1F,EAAG,IAAsB,GAAhB8F,KAAKgO,UAAiBpO,SAAS1F,EAAG,IAAM,GAAG+R,SAAS,KAC9E,IAAKA,YAAc,KAAO,KAAO,KAAO,MAAMhS,QAAQ,SAAU8T,GAIzDE,EAAaC,GAAgBA,EAAIjU,QAAQ,eAAiBkU,GAAMA,EAAE,GAAK,IAAMA,EAAE,IAAIvL,cAQnFwL,EAAerU,GACnBsU,KAAKC,MAAMD,KAAKE,UAAUxU,IAGtByU,EAAY,CAACjP,EAA4BkP,GAAwB,SAC3DlV,IAAVgG,EAAsBkP,EAAelP,EAGjCmP,EAAQC,GACZ,IAAI/T,QAASC,GAAY+T,WAAW/T,EAAS8T,IAUzCE,EAAgB,CAACC,EAAWC,KACvC,MAAMtP,EAAS4O,KAAKC,MAAMD,KAAKE,UAAUO,IACzC,OAAOE,EAAUvP,EAAQsP,IAUdC,EAAY,CAACF,EAAWC,KAEnC,IAAK,MAAM/I,KAAK+I,EACd,IAEMA,EAAK/I,GAAGiJ,cAAgBvS,OAC1BoS,EAAK9I,GAAKgJ,EAAUF,EAAK9I,GAAI+I,EAAK/I,IAElC8I,EAAK9I,GAAK+I,EAAK/I,GAEjB,MAAO/G,GAEP6P,EAAK9I,GAAK+I,EAAK/I,GAGnB,OAAO8I,GAGII,EAAsB,CACjC,YACA,YACA,WAGWC,EAAc,KACzB,MAAMC,EAAW,iBACjB,IAAI9R,EAAMG,OAAOiG,SAAS2L,KAC1B,GAAID,EAAU,CACZ,IAAK/M,SAASiN,SACZ,OAAO,KAEThS,EAAM+E,SAASiN,SAGjB,MAAM,SAAChK,GAAY,IAAIiK,IAAIjS,GAC3B,OAAOgI,GAGIkK,EAAkBlK,KACzB4J,EAAoB9S,SAASkJ,OAI7BA,EAASmK,SAAS,kBAKlBnK,EAASmK,SAAS,eAAgBnK,EAASmK,SAAS,gBAO7CC,EAAa,IAAIC,KAC5BzQ,QAAQ0Q,KAAK,kBAAmBD,IAGrBE,EAAkBpL,I,YAC7B,OAA6B,QAA7B,EAAuB,QAAvB,EAAKA,EAAYqL,cAAM,eAAEC,YAAI,eAAEzS,KACrBmH,EAAYqL,OAAOC,KAAKzS,KAEN,QAA5B,EAAuB,QAAvB,EAAKmH,EAAYqL,cAAM,eAAEE,WAAG,eAAE1S,KACpBmH,EAAYqL,OAAOE,IAAI1S,IAE1B,MAGI2S,EAAmBxL,I,QAC9B,OAA6B,QAA7B,EAAuB,QAAvB,EAAKA,EAAYqL,cAAM,eAAEI,YAAI,eAAE5S,KACrBmH,EAAYqL,OAAOI,KAAK5S,IAE3B,MAGI6S,EAAeC,GACM,OAAzBP,EAAeO,IAA4C,OAA1BH,EAAgBG,GAG7CC,EAAc,CAACC,EAAkCC,KAC5D,GAAqB,kBAAVA,EACT,OAAO,KAET,MAAMC,EAAUF,EAAkBA,EAAiB,IAAM,GACzD,OAAOE,EAASD,EAAME,oBAAelX,EAAW,CAC9CmX,sBAAuB,EACvBC,sBAAuB,KAMrBC,EAAoB,EACbC,EAA0B,CAACC,EAAaC,EAAmBH,KAEtE,GAAIE,EAAM,IAAM,EACd,OAAOA,EAGT,MAAM5D,EAAU6D,IAAaH,EAAqB5Q,KAAKC,IAAI,GAAI8Q,GAAY,IAC3E,OAAO/Q,KAAKgM,OAAO8E,EAAME,OAAOC,SAAW/D,GAAUA,GAG1CgE,EAAyBjM,MAC/BA,EAAOkM,WAAalM,EAAOkM,SAAS7W,WAIhC2K,EAAOkM,SAASC,KAAMC,GAAiD,gBAA1BA,EAAcC,SAGzDC,EAAkB,CAACC,EAAsBnF,KACpD,MAAMoF,EAAahU,OAAOqP,YAAY,KACpC0E,IACAzE,cAAc0E,IACbpF,GACH,OAAOoF,GAIIC,EAAcjU,OAAekU,oBAAuElU,OAAekU,oBAA/DH,GAAkCA,IAEtFI,EAA0BtU,IACrC,IAAIuU,EAAYvU,EAChB,MAAMwU,EAAYD,EAAUzV,SAAS,KAAO,IAAM,IAC5C2V,EAAe,MACfC,EAA8BD,EAAe,OAC7CE,EAAQJ,EAAUzV,SAAS2V,GAMjC,OALKE,EAGHJ,EAAYA,EAAU5X,QAAQ,IAAIiY,OAAOH,EAAe,mBAAoBC,GAF5EH,GAAaC,EAAYE,EAIpBH,GAGIM,EAAqB,IAAwB,sBAAlBzO,SAAS2L,M,kCClQjD,sGAAO,MAAM+C,EAAa,KACxB,IACE,OAAO3U,OAAO4U,OAAS5U,OAAO6U,IAC9B,MAAOrT,GACP,OAAO,IAGEsT,EAAkB,KACzB9U,OAAOiG,SAAS2L,KAAKjT,SAAS,aAMvBoW,EAAa,KACxB,IACE,QAAS/U,OAAOgV,OAAOpQ,SACvB,MAAOpD,GACP,OAAO",
    "file": "js/chunk-common-legacy.b79b9f05.js",
    "sourcesContent": [
      "import RoomleSdk from '@roomle/web-sdk';\nimport RapiAccess from '@roomle/web-sdk/lib/definitions/common-core/src/rapi-access';\nimport {GlbViewer} from '@roomle/web-sdk/lib/definitions/glb-viewer-core/src/glb-viewer';\nimport {Configurator} from '@roomle/web-sdk/lib/definitions/configurator-core/src/configurator';\nimport {Nullable} from '@/common/utils/types';\nimport {UiInitData} from '@/configurator/embedding/types';\nimport {GlobalInitDataDefinition} from '@roomle/web-sdk/lib/definitions/common-core/src/utils/shims';\nimport {Planner} from '@roomle/web-sdk/lib/definitions/planner-core/src/planner';\nimport Main from '@roomle/web-sdk/lib/definitions/common-core/src/main';\n\n/**\n * We use this class in a plugin so we\n * can rely on DI to change it during testing\n */\nexport class RoomleSdkWrapper {\n\n  private _configuratorInstance: Nullable<Configurator> = null;\n  private _viewerInstance: Nullable<GlbViewer> = null;\n  private _plannerInstance: Nullable<Planner> = null;\n\n  private _currentInstance: Nullable<Main> = null;\n\n  public get hasPlanner(): boolean {\n    return !!this._plannerInstance;\n  }\n\n  public async getConfigurator(element: HTMLElement, initData?: UiInitData): Promise<Configurator> {\n    if (this._plannerInstance) {\n      const api = await this._plannerInstance.getApi();\n      return await api.switchToConfigurator();\n    }\n    if (this._configuratorInstance) {\n      this._currentInstance?.pause();\n      if (!element) {\n        throw new Error('Can not resume with configurator, please provide a proper HTMLElement');\n      }\n      this._configuratorInstance.resume(element);\n      return this._configuratorInstance;\n    }\n\n    this._configuratorInstance = await RoomleSdk.getConfigurator(initData);\n    this._configuratorInstance.boot();\n    this._currentInstance?.pause();\n    this._currentInstance = this._configuratorInstance;\n    return this._configuratorInstance;\n  }\n\n  public async getGlbViewer(element: HTMLElement, initData?: UiInitData): Promise<GlbViewer> {\n    if (this._plannerInstance) {\n      const api = await this._plannerInstance.getApi();\n      return await api.switchToViewer();\n    }\n    if (this._viewerInstance) {\n      this._currentInstance?.pause();\n      if (!element) {\n        throw new Error('Can not resume with viewer, please provide a proper HTMLElement');\n      }\n      this._viewerInstance.resume(element);\n      return this._viewerInstance;\n    }\n    this._viewerInstance = await RoomleSdk.getGlbViewer(initData);\n    this._currentInstance?.pause();\n    this._viewerInstance.boot();\n    this._currentInstance = this._viewerInstance;\n    return this._viewerInstance;\n  }\n\n  public async getPlanner(element: HTMLElement, initData?: UiInitData): Promise<Planner> {\n    if (this._plannerInstance) {\n      this._currentInstance?.pause();\n      if (!element) {\n        throw new Error('Can not resume with viewer, please provide a proper HTMLElement');\n      }\n      this._plannerInstance.resume(element);\n      return this._plannerInstance;\n    }\n    if (!initData) {\n      initData = {};\n    }\n    if (initData.edit === undefined) {\n      initData.edit = true;\n    }\n    this._plannerInstance = await RoomleSdk.getPlanner(initData);\n    this._currentInstance?.pause();\n    this._plannerInstance.boot();\n    this._currentInstance = this._plannerInstance;\n    return this._plannerInstance;\n  }\n\n  public async getRapiAccess(): Promise<RapiAccess> {\n    return await RoomleSdk.getRapiAccess();\n  }\n\n  public setGlobalInitData(initData: Nullable<GlobalInitDataDefinition>) {\n    if (!initData) {\n      initData = {};\n    }\n    RoomleSdk.setGlobalInitData(initData);\n  }\n}\n",
      "let translations: any = {};\nlet waitingForTranslations: Promise<object>;\n\nconst getProperty = (o: object, path: string): unknown => {\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  path = path.replace(/^\\./, '');           // strip a leading dot\n  const a = path.split('.');\n  for (let i = 0, n = a.length; i < n; ++i) {\n    const k = a[i];\n    if (k in o) {\n      o = (o as any)[k];\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\nconst Localize: any = {\n  install(Vue: any, options: LocalizeOptions) {\n    if (options.translationSource) {\n      waitingForTranslations = new Promise<object>(((resolve) => {\n        options.translationSource.getTranslations().then((receivedTranslations: any) => {\n          translations = receivedTranslations;\n          resolve(translations);\n        });\n      }));\n    }\n    Vue.mixin({\n      data() {\n        return {\n          localizations: {\n            t: (name: string) => {\n              return name;\n            },\n          },\n        };\n      },\n      computed: {\n        t() {\n          (this as any).$translations.then((t: any) => {\n            (this as any).localizations.t = (name: string) => {\n              return getProperty(t, name);\n            };\n          });\n          return (this as any).localizations;\n        },\n      },\n    });\n    Vue.prototype.$translations = waitingForTranslations;\n  },\n};\n\nexport default Localize;\n\nexport interface LocalizeOptions {\n  translationSource: TranslationSource;\n}\n\nexport interface TranslationSource {\n  getTranslations(): any;\n}\n",
      "import {RoomleEmbeddingApiKeys} from '@/configurator/embedding/roomle-configurator-api';\nimport {ConfiguratorSettings, UiInitData} from '@/configurator/embedding/types';\n\nexport const NAMESPACE: {[key: string]: keyof RoomleEmbeddingApiKeys | 'callbacks'} = {\n  SDK: 'extended',\n  CALLBACKS: 'callbacks',\n  UI: 'ui',\n  ANALYTICS: 'analytics',\n};\n\nexport const NAMESPACE_SEPARATOR = '.';\nexport const SDK_CALLBACK = NAMESPACE.SDK + NAMESPACE_SEPARATOR + NAMESPACE.CALLBACKS;\n\nexport const HANDSHAKE_MESSAGES = {\n  REQUEST_BOOT: 'requestBoot',\n  SETUP: 'setup',\n  WEBSITE_READY: 'websiteReady',\n};\n\nconst HIDDEN_METHODS = ['constructor', 'callbacks'];\nexport const isExposable = (name: string) => name[0] !== '_' && !HIDDEN_METHODS.includes(name);\n\nexport const getMethodNames = (proto: any, namespace: string, isCallback: boolean = false): string[] => {\n  if (!proto) {\n    return [];\n  }\n  const allMethods = Object.getOwnPropertyNames(proto);\n  const subNamespace = isCallback ? NAMESPACE.CALLBACKS + NAMESPACE_SEPARATOR : '';\n  return allMethods.filter(isExposable).map((name) => namespace + NAMESPACE_SEPARATOR + subNamespace + name);\n};\n\nexport const getConfiguratorSettings = async (configuratorId: string, initData: UiInitData): Promise<ConfiguratorSettings> => {\n  if (typeof configuratorId !== 'string') {\n    throw new Error('Configurator ID is not a string type: \"' + (typeof configuratorId) + '\"');\n  }\n  const server = initData.customApiUrl ? initData.customApiUrl : 'https://api.roomle.com/v2';\n  const currentTenant = initData.overrideTenant || 9;\n  const url = server + '/configurators/' + configuratorId;\n  const apiKey = 'roomle_portal_v2';\n  const token = '03-' + window.btoa((new Date()).toISOString() + ';anonymous;' + apiKey);\n  const createHeaders = () => {\n    const headers: any = {\n      apiKey,\n      currentTenant,\n      locale: 'en',\n      language: 'en',\n      device: 1,\n      token,\n      platform: 'web',\n    };\n    return new Headers(headers);\n  };\n\n  const request = new Request(url, {\n    method: 'GET',\n    headers: createHeaders(),\n    mode: 'cors',\n    cache: 'default',\n  });\n  const response = await fetch(request);\n  const {configurator} = await response.json();\n  return configurator;\n};\n",
      "import {TranslationSource} from '@/common/plugins/localize';\nimport {deepMerge} from '@/common/utils/helper';\n\nexport default class LocalTranslationSource implements TranslationSource {\n\n  private _locale: string;\n  private _overrideTranslation: any;\n\n  constructor(locale: string, overrideTranslation?: any) {\n    this._locale = locale;\n    if (overrideTranslation) {\n      this._overrideTranslation = overrideTranslation[this._locale];\n    }\n  }\n\n  public async getTranslations(): Promise<any> {\n    try {\n      const response = await fetch('./translations/' + this._locale + '.json');\n      const json = await response.json();\n      if (this._overrideTranslation) {\n        deepMerge(json, this._overrideTranslation);\n      }\n      return json;\n    } catch (e) {\n      console.error('Did not find language ' + this._locale + ', fallback to english');\n      return this._getFallbackTranslations();\n    }\n  }\n\n  private async _getFallbackTranslations(): Promise<any> {\n    try {\n      const response = await fetch('./translations/en.json');\n      const json = await response.json();\n      if (this._overrideTranslation) {\n        deepMerge(json, this._overrideTranslation);\n      }\n      return json;\n    } catch (e) {\n      console.error(e);\n      return {};\n    }\n  }\n\n}\n",
      "// for details see: https://stackoverflow.com/a/9733420/10800831\n\nimport {Nullable} from '@/common/utils/types';\nimport {UiInitData} from '@/configurator/embedding/types';\n\ninterface NumericRgb {\n  r: number;\n  g: number;\n  b: number;\n}\n\nconst hex2Rgb = (hex: string): Nullable<NumericRgb> => {\n  if (typeof hex === 'string' && hex.length === 4) {\n    // handle RGB short version, for details see:\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#RGB_colors\n    hex = [...hex].map((value) => value + value).join('').replace('##', '#');\n  }\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16),\n  } : null;\n};\n\nconst luminanace = ({r, g, b}: NumericRgb): number => {\n  const a = [r, g, b].map((value) => {\n    value = value / 255;\n    return value <= 0.03928 ? value / 12.92 : Math.pow((value + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n};\n\nconst contrast = (rgb1: NumericRgb, rgb2: NumericRgb): number => {\n  const lum1 = luminanace(rgb1);\n  const lum2 = luminanace(rgb2);\n  const brightest = Math.max(lum1, lum2);\n  const darkest = Math.min(lum1, lum2);\n  return (brightest + 0.05) / (darkest + 0.05);\n};\n\nconst getHigherContrastColor = (color: string, possiblity1: string, possiblity2: string, debug: string) => {\n  const primaryColor = hex2Rgb(color);\n  if (!primaryColor) {\n    console.warn('skin[' + debug + '-color] seems to be not a hex string either provide a value for skin[color-on-' + debug + '] or use a hex value, e.g.: #000000');\n    return null;\n  }\n  const possibleError = 'can not calculate contrast for default color with \"';\n  const black = hex2Rgb(possiblity1);\n  if (!black) {\n    console.warn(possibleError + possiblity1 + '\"');\n    return null;\n  }\n  const white = hex2Rgb(possiblity2);\n  if (!white) {\n    console.warn(possibleError + possiblity2 + '\"');\n    return null;\n  }\n\n  const contrastWithBlack = contrast(primaryColor, black!);\n  const contrastWithWhite = contrast(primaryColor, white!);\n  return (contrastWithBlack > contrastWithWhite) ? possiblity1 : possiblity2;\n};\n\nexport const prepareSkin = (initData: UiInitData, blackText: string, whiteText: string) => {\n  if (initData.skin?.['primary-color']) {\n    const rgbValues = hex2Rgb(initData.skin['primary-color']);\n    if (rgbValues) {\n      const {r, g, b} = rgbValues;\n      initData.skin['primary-color-in-rgb'] = r + ',' + g + ',' + b;\n    }\n  }\n  if (initData.skin?.['primary-color'] && !initData.skin?.['cta-color']) {\n    initData.skin['cta-color'] = initData.skin['primary-color'];\n  }\n\n  if (initData.skin?.['primary-color'] && !initData.skin?.['color-on-primary']) {\n    const color = getHigherContrastColor(initData.skin['primary-color'], blackText, whiteText, 'primary');\n    if (color) {\n      initData.skin['color-on-primary'] = color;\n    }\n  }\n\n  if (initData.skin?.['cta-color'] && !initData.skin?.['color-on-cta']) {\n    const color = getHigherContrastColor(initData.skin['cta-color'], blackText, whiteText, 'cta');\n    if (color) {\n      initData.skin['color-on-cta'] = color;\n    }\n  }\n\n  if (!initData.skin) {\n    initData.skin = {};\n  }\n};\n",
      "// extracted by mini-css-extract-plugin\nmodule.exports = {\"breakPointDesktop\":\"1024px\",\"blackText\":\"#121212\",\"whiteText\":\"#fff\"};",
      "import {Nullable} from '@/common/utils/types';\n\n// see why: https://stackoverflow.com/a/58065241/10800831\n//          https://stackoverflow.com/a/58064750/10800831\nexport const isIOs = () => (/iPad|iPhone|iPod/i.test(navigator.platform) || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) && !window.MSStream;\n\nexport const hasARQuicklook = (): Nullable<boolean> => {\n  if (isAndroid()) {\n    return null; // currently there is no way to detect AR Quicklook on Android\n  }\n  if (isIOs()) {\n    try {\n      // for details see Safari Docs:\n      // https://webkit.org/blog/8421/viewing-augmented-reality-assets-in-safari-for-ios/\n      const a = document.createElement('a');\n      return a.relList.supports('ar');\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n  return null;\n};\n\nexport const isInAppBrowser = (): Nullable<boolean> => {\n  if (isAndroid()) {\n    return null;\n  }\n  try {\n    // for more details see: https://stackoverflow.com/a/54231915/10800831\n    const standalone = (window.navigator as any).standalone;\n    const userAgent = window.navigator.userAgent.toLowerCase();\n    const isSafari = /safari/.test(userAgent);\n    if (isIOs()) {\n      return !standalone && !isSafari;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n  return null;\n};\n\nexport const isAndroid = () => /(android)/i.test(navigator.userAgent);\n\nexport const deviceSupportsAR = (): boolean => {\n  if (isIOs() && hasARQuicklook()) {\n    return true;\n  }\n  return isAndroid();\n};\n",
      "import {Nullable} from '@/common/utils/types';\n\nexport const BROWSER_LANGUAGE_PROPERTY_KEYS_KNOWN = ['language', 'browserLanguage', 'userLanguage', 'systemLanguage'];\n\nexport const getLanguage = (lang: Nullable<string> = null) => {\n  const navigator = window.navigator;\n\n  if (lang) {\n    return lang.substr(0, 2);\n  }\n\n  if (Array.isArray(navigator.languages) && navigator.languages.length > 0) {\n    return navigator.languages[0].substr(0, 2);\n  }\n\n  for (let i = 0, length = BROWSER_LANGUAGE_PROPERTY_KEYS_KNOWN.length; i < length; i++) {\n    const language = (navigator as any)[BROWSER_LANGUAGE_PROPERTY_KEYS_KNOWN[i]];\n    if (language) {\n      return language.substr(0, 2);\n    }\n  }\n\n  return 'en';\n};\n",
      "import {deepMergeCopy, getHostname, isDemoHostname, isIdAnItem} from '@/common/utils/helper';\nimport {ConfiguratorSettings, UiInitData} from '@/configurator/embedding/types';\nimport {HANDSHAKE_MESSAGES} from '@/configurator/embedding/utils';\nimport RapiAccess from '@roomle/web-sdk/lib/definitions/common-core/src/rapi-access';\nimport {Nullable} from '@/common/utils/types';\nimport {getLanguage} from '@/common/utils/browser';\n// tslint:disable:no-unused-expression -- only import type because otherwise everything is bundled\nimport type {MessageHandler} from '@/configurator/embedding/message-handler';\nimport {RoomleSdkWrapper} from '@/configurator/business-logic/roomle-sdk-wrapper';\n\nexport const CONFIGURATOR_IDLE = '(idle)';\n\n// not supporting IE11: https://caniuse.com/#feat=urlsearchparams\nexport const getInitData = (useFallbackId: boolean = true): UiInitData => {\n  const urlParams = new URLSearchParams(window.location.search);\n  // cast to any because it comes from URL params after this method initData\n  // has the correct shape (types, names etc)\n  const initData: any = {};\n  urlParams.forEach((value, key) => setProperty(initData, key, value));\n  castInitData(initData);\n  if (!useFallbackId) {\n    return initData as UiInitData;\n  }\n  if (!initData.id) {\n    initData.id = 'usm:frame';\n  }\n  if (initData.isItem === undefined) {\n    initData.isItem = isIdAnItem(initData.id);\n  }\n  return initData as UiInitData;\n};\n\nexport const castAndFixInitData = (initData: UiInitData): UiInitData => {\n  castInitData(initData);\n  if (initData?.customApiUrl) {\n    initData.customApiUrl = decodeURIComponent(initData.customApiUrl);\n  }\n  if (initData.emails === undefined) {\n    initData.emails = false;\n  }\n  if (initData.shareUrl) {\n    initData.deeplink = initData.shareUrl.replace(LEGACY_SHARE_PLACEHOLDER, SHARE_PLACEHOLDER);\n  }\n  return initData;\n};\n\nexport const castInitData = (obj: Nullable<{[key: string]: any}>): void => {\n  if (!obj) {\n    return;\n  }\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const value = obj[key];\n    // need to type-check for null because typeof null evaluates to object\n    // see here why this is like it is: https://2ality.com/2013/10/typeof-null.html\n    if (!Array.isArray(value) && typeof value === 'object' && value !== null) {\n      return castInitData(value);\n    }\n    if (Array.isArray(value)) {\n      for (const entry of value) {\n        castInitData(entry);\n      }\n      return;\n    }\n\n    if (value === 'true' || value === 'false') {\n      obj[key] = value === 'true';\n    }\n  }\n};\n\nexport const mergeInitData = (configuratorSettings: ConfiguratorSettings | {id: string; settings: UiInitData}, currentInitData: UiInitData): UiInitData => {\n  currentInitData.configuratorId = configuratorSettings.id;\n  const remoteInitData = configuratorSettings.settings || {};\n  // This is a performance optimization so we do not need to fetch\n  // configurator settings twice\n  if (!currentInitData.overrideTenant && (configuratorSettings as ConfiguratorSettings).tenant) {\n    // use as any because we send tenant id as string but SDK requires to send a number\n    // casting to number could become a problem when we change tenant IDs to something\n    // random instead of a integer which is incremented\n    (currentInitData as any).overrideTenant = (configuratorSettings as ConfiguratorSettings).tenant;\n  }\n  return deepMergeCopy(remoteInitData, currentInitData);\n};\n\nexport const getEmbeddingInitData = async (messageHandler: MessageHandler): Promise<UiInitData> => {\n  const initData = await messageHandler.sendMessage(HANDSHAKE_MESSAGES.REQUEST_BOOT);\n  if (initData.id && initData.isItem === undefined) {\n    initData.isItem = isIdAnItem(initData.id);\n  }\n  // @schobi check where we can set global-init-data so that it's also available for getConfiguratorSettings\n  // sdkWrapper.setGlobalInitData(initData);\n  // This code sets tenant correctly also for old embedding.js lib versions\n  // if (!initData.overrideTenant && initData.configuratorId) {\n  //   const {tenant} = await rapiAccess.getConfiguratorSettings(initData.configuratorId) as ConfiguratorSettings;\n  //   if (tenant) {\n  //     initData.overrideTenant = tenant;\n  //   }\n  // }\n  return castAndFixInitData(initData);\n};\n\nexport const getRemoteInitData = async (rapiAccess: RapiAccess, configuratorId: string): Promise<UiInitData> => {\n  const {id, tenant, settings = {}} = await rapiAccess.getConfiguratorSettings(configuratorId) as ConfiguratorSettings;\n  const remoteInitData = settings as UiInitData;\n  remoteInitData.configuratorId = id;\n  if (!remoteInitData.overrideTenant && tenant) {\n    // use as any because we send tenant id as string but SDK requiers to send a number\n    // casting to number could become a problem when we change tenant IDs to something\n    // random instead of a integer which is incremented\n    remoteInitData.overrideTenant = tenant;\n  }\n  return castAndFixInitData(remoteInitData);\n};\n\nexport const getFallbackInitData = () => {\n  const fallbackInitData = {} as UiInitData;\n  if (!fallbackInitData.locale) {\n    fallbackInitData.locale = getLanguage();\n  }\n  if (fallbackInitData.id === CONFIGURATOR_IDLE) {\n    delete fallbackInitData.id;\n  }\n\n  const hostname = getHostname();\n  if (hostname && isDemoHostname(hostname)) {\n    fallbackInitData.configuratorId = 'demoConfigurator';\n  }\n\n  fallbackInitData.customApiUrl = process.env.VUE_APP_RAPI_URL as string;\n  fallbackInitData.emails = false;\n  return fallbackInitData as UiInitData;\n};\n\nexport const LEGACY_SHARE_PLACEHOLDER = '<CONF_ID>';\nexport const SHARE_PLACEHOLDER = '#CONFIGURATIONID#';\n\n/**\n * combines init data in this order: query params > embedding > remote > fallback\n *\n * some exceptions to consider:\n * - tenant: when do we need the tenant and where do we get it from?\n *\n * @param messageHandler\n * @param sdkWrapper\n * @param fallbackInitData\n */\nexport const combineInitData = async (messageHandler: Nullable<MessageHandler>, sdkWrapper: RoomleSdkWrapper, queryParamsInitData: UiInitData): Promise<UiInitData> => {\n  castAndFixInitData(queryParamsInitData);\n  const fallbackInitData = getFallbackInitData();\n\n  let embeddingInitData = null;\n  if (messageHandler) {\n    embeddingInitData = await getEmbeddingInitData(messageHandler);\n  }\n\n  sdkWrapper.setGlobalInitData(deepMergeCopy(deepMergeCopy(fallbackInitData, embeddingInitData), queryParamsInitData));\n  const rapiAccess = await sdkWrapper.getRapiAccess();\n\n  const configuratorId = queryParamsInitData.configuratorId || embeddingInitData?.configuratorId || fallbackInitData.configuratorId;\n  if (!configuratorId) {\n    throw new Error('Please provide a correct configuratorId, you get the correct ID from your Roomle Contact Person');\n  }\n  const remoteInitData = await getRemoteInitData(rapiAccess, configuratorId!);\n\n  const finalInitData = deepMergeCopy(deepMergeCopy(deepMergeCopy(fallbackInitData, remoteInitData), embeddingInitData), queryParamsInitData);\n  sdkWrapper.setGlobalInitData(finalInitData);\n  return finalInitData;\n};\n\nexport const setProperty = (o: {[key: string]: any}, path: string, value: any) => {\n  if (typeof o !== 'object') {\n    return;\n  }\n  const parts = path.split('.');\n  const last = parts.pop() as string;\n  let actualObject = o;\n  for (const p of parts) {\n    if (!actualObject[p]) {\n      actualObject[p] = {};\n    }\n    actualObject = actualObject[p];\n  }\n  actualObject[last] = value;\n};\n",
      "export type Nullable<T> = T | null;\nexport type AnyFunction<T = void> = (...args: any[]) => T;\n\nexport interface CssHash {\n  [key: string]: string;\n}\n\nexport const enum USER_ACTION_MODULE {\n  CONFIGURATOR = 3,\n}\n\nexport const enum USER_ACTION {\n  CONVERSION = 11,\n  SHARE_AR = 301,\n}\n",
      "import {GlobalInitDataDefinition, InitDataDefinition} from '@roomle/web-sdk/lib/definitions/common-core/src/utils/shims';\nimport {RapiConfiguratorSettings, RapiId} from '@roomle/web-sdk/lib/definitions/typings/rapi-types';\n\nexport enum UI_BUTTON {\n  AR = 'ar',\n  PARTLIST = 'partlist',\n  MULTISELECT = 'multiselect',\n  DIMENSIONS = 'dimensions',\n  FULLSCREEN = 'fullscreen',\n  RESETCAMERA = 'resetcamera',\n  RENDERIMAGE = 'renderimage',\n  ADDONS = 'addons',\n  REQUESTPRODUCT = 'requestproduct',\n  REQUESTPLAN = 'requestplan',\n  SAVEDRAFT = 'savedraft',\n  STARTCONFIGURE = 'startconfigure',\n  PAUSECONFIGURE = 'pauseconfigure',\n  VARIANTS = 'variants',\n  EXPORT_3D = 'export3d',\n}\n\ninterface FeatureFlags {\n  realPartList?: boolean;\n}\n\nexport interface VariantsMap {\n  [key: string]: RapiId;\n}\n\nexport interface UiInitData extends InitDataDefinition, GlobalInitDataDefinition {\n  buttons?: {\n    [UI_BUTTON.AR]?: boolean,\n    [UI_BUTTON.PARTLIST]?: boolean,\n    [UI_BUTTON.MULTISELECT]?: boolean,\n    [UI_BUTTON.DIMENSIONS]?: boolean,\n    [UI_BUTTON.FULLSCREEN]?: boolean,\n    [UI_BUTTON.RESETCAMERA]?: boolean,\n    [UI_BUTTON.RENDERIMAGE]?: boolean,\n    [UI_BUTTON.ADDONS]?: boolean,\n    [UI_BUTTON.REQUESTPRODUCT]?: boolean,\n    [UI_BUTTON.SAVEDRAFT]?: boolean,\n    [UI_BUTTON.STARTCONFIGURE]?: boolean,\n    [UI_BUTTON.PAUSECONFIGURE]?: boolean,\n    [UI_BUTTON.EXPORT_3D]?: boolean,\n  };\n  skin?: EmbeddingSkin;\n  zIndex?: number;\n  useLocalRoomle?: boolean;\n  overrideServerUrl?: string;\n  /**\n   * @deprecated\n   * for details see deeplink, the only change is that the placeholder is <CONF_ID> here instead of #CONFIGURATIONID#\n   */\n  shareUrl?: string;\n\n  /**\n   * Set this parameter to use your custom share url.\n   * The provided url has to contain a configuration id parameter (`#CONFIGURATIONID#`) which will be replaced with the real\n   * configuration id.\n   * default: not set -> use Roomle short url service (linking to roomle.com domain)\n   * usage: http://www.example.com/configurator?id=#CONFIGURATIONID#\n   */\n  deeplink?: string;\n\n  /**\n   * Define to which variants you can switch from which root component id. This is a simple JS object which is\n   * used like a map, e.g.: { \"usm:frame\": \"DB_Start_ohne_Element\" } now if a configuration with root component\n   * usm:frame is loaded all the items from the tag \"DB_Start_ohne_Element\" are now shown as variants\n   */\n  variants?: VariantsMap;\n  /**\n   * if set to true you can load the configurator in an iframe.src but without any embedding lib\n   * This is needed if you do not want to interact with the configurator and only want to use it\n   * to view 3d content. Imagine it then as a <img> tag for 3d content\n   */\n  api?: boolean;\n  /**\n   * if this is set to true the \"save draft\" will be done by sending\n   * an e-mail\n   */\n  emails?: boolean;\n  /**\n   * set this flag to true if you want to configure on small devices in landscape as well\n   * this is relevant for things like Rubens Admin, where the configurator is embedded into a very\n   * small div\n   */\n  mobileLandscape?: boolean;\n  /**\n   * set this flag to true if you want to group the part list by main components\n   */\n  groupPartList?: boolean;\n  /**\n   * @internal\n   * this is an object which is for Roomle internal usage, we can set feature flags\n   * so that we can ensure a smooth transition between different versions of our configurator\n   */\n  featureFlags?: FeatureFlags;\n  /**\n   * set this flag to false if the user did not give the consent to Analytics\n   */\n  gaConsent?: boolean;\n  /**\n   * override translations to change labels for some or all languages.\n   * Example:\n   *\n   * ```\n   *   \"translations\": {\n   *     \"en\": {\n   *       \"params\": {\n   *         \"request-product\": \"Add to cart\",\n   *       }\n   *     }\n   *   }\n   * ```\n   *\n   * You can find all labels here: [Base.json](../../../ui/base.json)\n   */\n  translations?: any;\n  /**\n   * set this flag to false and global parameters are not applied when switching variants\n   * default: true\n   */\n  applyCurrentGlobalParameters?: boolean;\n}\n\nexport interface EmbeddingSkin {\n  'primary-color'?: string;\n  'primary-color-in-rgb'?: string;\n  'color-on-primary'?: string;\n  'cta-color'?: string;\n  'color-on-cta'?: string;\n}\n\nexport interface ConfiguratorSettings extends RapiConfiguratorSettings {\n  id: string;\n  allowedHost: string;\n  tenant: number;\n  url: string;\n  settings: UiInitData;\n}\n",
      "// @ts-ignore\nimport {breakPointDesktop} from '@/common/styles/Global.module.scss';\nimport {wait} from '@/common/utils/helper';\nimport {Nullable} from '@/common/utils/types';\nimport {isIOs} from '@/common/utils/user-agent';\n\nconst enum DIRECTION {\n  VERTICAL,\n  HORIZONTAL,\n}\n\nexport const isScrolledToRightEnd = (element: Nullable<HTMLElement>, threshold: number = 0) => {\n  if (!element) {\n    return false;\n  }\n  const {scrollWidth, offsetWidth, scrollLeft} = element;\n  return (scrollLeft + offsetWidth) >= scrollWidth - threshold;\n};\n\nconst _hasOverflow = (element: HTMLElement, direction: DIRECTION) => {\n  if (!element) {\n    return false;\n  }\n  const offsetKey = (direction === DIRECTION.HORIZONTAL) ? 'offsetWidth' : 'offsetHeight';\n  const scrollKey = (direction === DIRECTION.HORIZONTAL) ? 'scrollWidth' : 'scrollHeight';\n  return element[offsetKey] < element[scrollKey];\n};\n\nexport const hasVerticalOverflow = (element: HTMLElement) => {\n  return _hasOverflow(element, DIRECTION.VERTICAL);\n};\n\nexport const hasHorizontalOverflow = (element: HTMLElement) => {\n  return _hasOverflow(element, DIRECTION.HORIZONTAL);\n};\n\nexport const lastVisibleElement = (container: HTMLElement, threshold: number = 0) => {\n  const children = container.children;\n  const length = children.length;\n  if (!length) {\n    return null;\n  }\n\n  const containerBoundingClientRect = container.getBoundingClientRect();\n  const containerWidth = containerBoundingClientRect.left + containerBoundingClientRect.width;\n  let lastVisibleChild = children[length - 1];\n  for (let i = 0; i < length; i++) {\n    const child = children[i];\n    const childClientRect = child.getBoundingClientRect();\n    if (childClientRect.left + threshold > containerWidth) {\n      return lastVisibleChild;\n    }\n    lastVisibleChild = child;\n  }\n  return lastVisibleChild;\n};\n\nexport const cssVariableToNumber = (cssVariable: string) => parseFloat(cssVariable.replace(/(?![\\.])\\D/g, ''));\n\nexport const remToPixel = (remValue: string, remBase: number) => parseFloat(remValue.replace('rem', '')) * remBase;\n\nexport const percentInStringToFloat = (percentInString: string): number => parseFloat(percentInString.replace('%', '')) / 100;\nexport const animationDurationInMsToFloat = (animationDuration: string): number => parseFloat(animationDuration.replace('ms', ''));\n\nexport const calcIsDesktop = () => window.innerWidth >= parseInt(breakPointDesktop.replace('px', ''), 10);\n\nconst LOADING_SCREEN_CLASSES = {\n  CONTAINER: 'rml-loading',\n  ANIMATION_CONTAINER: 'spinner div',\n  OPACITY: 'rml-loading--opacity-0',\n  HIDE: 'rml-loading--hide',\n  ANIMATION_1: 'double-bounce1',\n  ANIMATION_2: 'double-bounce2',\n  GLTF_LOADER: 'gltf-loader',\n  CIRCLE_PROGRESS: 'progress-ring__circle',\n};\n\nconst FADE_OUT_DELAY = 500;\nconst LOADING_SCREEN_CSS = {\n  TRANSITION: 'opacity ease-in-out ' + FADE_OUT_DELAY + 'ms',\n};\n\nexport const removeLoadingScreen = async () => {\n  const loadingScreen = document.querySelector<HTMLElement>('.' + LOADING_SCREEN_CLASSES.CONTAINER);\n  if (loadingScreen) {\n    loadingScreen.style.transition = LOADING_SCREEN_CSS.TRANSITION;\n    await wait(0); // wait for next runloop;\n    if (!loadingScreen) {\n      return;\n    }\n    loadingScreen.classList.add(LOADING_SCREEN_CLASSES.OPACITY);\n    await wait(FADE_OUT_DELAY); // wait for animation to finish;\n    if (!loadingScreen) {\n      return;\n    }\n    loadingScreen.classList.add(LOADING_SCREEN_CLASSES.HIDE);\n    // Remove animation because otherwise it just continues to render in background\n    const animations = loadingScreen.querySelectorAll<HTMLElement>('.' + LOADING_SCREEN_CLASSES.ANIMATION_CONTAINER);\n    animations[0].classList.remove(LOADING_SCREEN_CLASSES.ANIMATION_1);\n    animations[1].classList.remove(LOADING_SCREEN_CLASSES.ANIMATION_2);\n  }\n};\n\nexport const showLoadingScreen = async () => {\n  const loadingScreen = document.querySelector<HTMLElement>('.' + LOADING_SCREEN_CLASSES.CONTAINER);\n  if (loadingScreen) {\n    loadingScreen.style.transition = LOADING_SCREEN_CSS.TRANSITION;\n    await wait(0); // wait for next runloop;\n    loadingScreen.classList.remove(LOADING_SCREEN_CLASSES.HIDE);\n    loadingScreen.classList.remove(LOADING_SCREEN_CLASSES.OPACITY);\n    const animations = loadingScreen.querySelectorAll<HTMLElement>('.' + LOADING_SCREEN_CLASSES.ANIMATION_CONTAINER);\n    animations[0].classList.add(LOADING_SCREEN_CLASSES.ANIMATION_1);\n    animations[1].classList.add(LOADING_SCREEN_CLASSES.ANIMATION_2);\n  }\n};\n\nexport const copyToClipboard = (text: string) => {\n  const input = document.createElement('input');\n  const inputId = 'hidden-input-for-clipboard';\n  input.id = inputId;\n  input.value = text;\n  document.body.appendChild(input);\n  // lifted from https://stackoverflow.com/a/43001673/1280401\n  if (isIOs()) {\n    const editable = input.contentEditable;\n    const readOnly = input.readOnly;\n\n    input.contentEditable = 'true';\n    input.readOnly = false;\n\n    const range = document.createRange();\n    range.selectNodeContents(input);\n\n    const selection = window.getSelection();\n    selection?.removeAllRanges();\n    selection?.addRange(range);\n\n    input.setSelectionRange(0, 999999);\n    input.contentEditable = editable;\n    input.readOnly = readOnly;\n  } else {\n    input.select();\n  }\n  try {\n    document.execCommand('copy');\n  } catch (e) {\n    console.error('document.execCommand(\\'copy\\') failed \"' + e + '\"');\n  }\n\n  document.body.removeChild(input);\n};\n\nexport const setLoadingProgress = (percent: number) => {\n  // inspired by: https://css-tricks.com/building-progress-ring-quickly/\n  const loadingContainer = document.querySelector<HTMLElement>('.' + LOADING_SCREEN_CLASSES.CONTAINER + ' .' + LOADING_SCREEN_CLASSES.GLTF_LOADER)!;\n  const circle = document.querySelector<SVGCircleElement>('.' + LOADING_SCREEN_CLASSES.CIRCLE_PROGRESS)!;\n  const radius = circle.r.baseVal.value;\n  const circumference = radius * 2 * Math.PI;\n\n  if (loadingContainer.classList.contains(LOADING_SCREEN_CLASSES.HIDE)) {\n    circle.style.strokeDasharray = `${circumference} ${circumference}`;\n    circle.style.strokeDashoffset = `${circumference}`;\n    loadingContainer.classList.remove(LOADING_SCREEN_CLASSES.HIDE);\n  }\n\n  const offset = circumference - percent * circumference;\n  circle.style.strokeDashoffset = Math.round(offset).toString();\n\n};\n\nexport const hideLoadingCircle = () => {\n  const loadingContainer = document.querySelector<HTMLElement>('.' + LOADING_SCREEN_CLASSES.CONTAINER + ' .' + LOADING_SCREEN_CLASSES.GLTF_LOADER)!;\n  loadingContainer.classList.add(LOADING_SCREEN_CLASSES.HIDE);\n};\n",
      "import {Nullable} from '@/common/utils/types';\nimport {isInIframe} from '@/common/utils/iframe';\nimport {RapiConfiguration, RapiItem, RapiTenant} from '@roomle/web-sdk/lib/definitions/typings/rapi-types';\nimport {SHARE_PLACEHOLDER} from '@/common/utils/init-data';\n\nexport const throttle = <T extends (...args: any[]) => any>(func: T, delay: number = 16): ((...funcArgs: Parameters<T>) => void) => {\n  let time: number;\n  let called = false;\n  let skippedCalls = 0;\n  let trailingCall: Nullable<any> = null;\n  return function (this: T, ..._args: Parameters<T>): void {\n    if (!time) {\n      time = Date.now();\n    }\n    if (!called || (time + delay - Date.now()) < 0) {\n      func.apply(this, [...arguments]);\n      time = Date.now();\n      called = true;\n    } else {\n      skippedCalls++;\n    }\n    if (!trailingCall) {\n      trailingCall = setInterval(() => {\n        if (skippedCalls) {\n          func.apply(this, [...arguments]);\n        }\n        skippedCalls = 0;\n        clearInterval(trailingCall);\n        trailingCall = null;\n      }, delay);\n    }\n  };\n};\n\nexport const round = (float: number, precision: number) => {\n  if (precision === -1) {\n    return float;\n  }\n  const factor = Math.pow(10, precision);\n  return Math.round(float * factor) / factor;\n};\n\nexport const isIdAnItem = (id: string) => id.split(':').length - 1 === 1;\n\nexport const isIdAPlan = (id: string) => id.split(':').length - 1 <= 0;\n\n/**\n * Get cloudinary (cdn) url for given parameters\n * @param url\n * @param format\n * @param size\n * @param step\n */\nexport const getImageURL = (url: string, size = 32, step = 32): string => {\n  // more info about valid transformation parameters -> https://cloudinary.com/documentation/image_transformations\n  return 'https://res.cloudinary.com/roomle/image/fetch/w_auto:' + step + ',w_' + size + ',h_' + size + ',f_auto,dpr_auto/' + encodeURIComponent(url);\n};\n\nexport interface KeyValuePair {\n  key: string;\n  value: string;\n}\n\nexport const addMetaHeaderTag = (id: string, attributes: KeyValuePair[]): void => {\n  if (!attributes || document.head.querySelector('#' + id)) {\n    return;\n  }\n  const htmlMetaElement = document.createElement('meta');\n  htmlMetaElement.setAttribute('id', id);\n  attributes.forEach((attribute) => {\n    htmlMetaElement.setAttribute(attribute.key, attribute.value);\n  });\n  document.head.appendChild(htmlMetaElement);\n};\n\nexport const uuid = (a: Nullable<string> = null): string => {\n  // tslint:disable no-bitwise\n  return a ? (parseInt(a, 10) ^ Math.random() * 16 >> parseInt(a, 10) / 4).toString(16) :\n    ((1e7).toString() + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n  // tslint:enable no-bitwise\n};\n\nexport const snakeCase = (str: string) => str.replace(/[\\w]([A-Z])/g, (m) => m[0] + '-' + m[1]).toLowerCase();\n\nexport interface KernelBoundsFormatted {\n  width: string;\n  height: string;\n  depth: string;\n}\n\nexport const deepCopy = <T>(o: T): T => {\n  return JSON.parse(JSON.stringify(o));\n};\n\nexport const toBoolean = (value: boolean | undefined, defaultValue: boolean = true): boolean => {\n  return value === undefined ? defaultValue : value;\n};\n\nexport const wait = (delayInMs: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, delayInMs));\n};\n\n/**\n * Recursively merge properties of two objects.\n * If a property exists in both it, property of obj2 is used.\n * Returns a new object (copy)\n * @param obj1\n * @param obj2\n */\nexport const deepMergeCopy = (obj1: any, obj2: any): any => {\n  const result = JSON.parse(JSON.stringify(obj1));\n  return deepMerge(result, obj2);\n};\n\n/**\n * Recursively merge properties of two objects.\n * If a property exists in both it, property of obj2 is used.\n * Warning: This returns obj1 and not a copy!\n * @param obj1\n * @param obj2\n */\nexport const deepMerge = (obj1: any, obj2: any): any => {\n  // tslint:disable-next-line\n  for (const p in obj2) {\n    try {\n      // Property in destination object set; update its value.\n      if (obj2[p].constructor === Object) {\n        obj1[p] = deepMerge(obj1[p], obj2[p]);\n      } else {\n        obj1[p] = obj2[p];\n      }\n    } catch (e) {\n      // Property in destination object not set; create it and set its value.\n      obj1[p] = obj2[p];\n    }\n  }\n  return obj1;\n};\n\nexport const NAMES_FOR_LOCALHOST = [\n  '127.0.0.1',\n  'localhost',\n  '0.0.0.0',\n];\n\nexport const getHostname = (): string | null => {\n  const isIframe = isInIframe();\n  let url = window.location.href;\n  if (isIframe) {\n    if (!document.referrer) {\n      return null;\n    }\n    url = document.referrer;\n  }\n\n  const {hostname} = new URL(url);\n  return hostname;\n};\n\nexport const isDemoHostname = (hostname: string): boolean => {\n  if (NAMES_FOR_LOCALHOST.includes(hostname)) {\n    return true;\n  }\n\n  if (hostname.endsWith('roomle.com')) {\n    return true;\n  }\n\n  // exception for CI builds\n  if (hostname.endsWith('gitlab.io') || hostname.endsWith('gitlab.com')) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const scriptInfo = (...args: any[]) => {\n  console.info('Script Info:', ...args);\n};\n\nexport const getGlbAssetUrl = (obj: RapiItem | RapiConfiguration): Nullable<string> => {\n  if ((obj as any).assets?.glTF?.url) {\n    return (obj as any).assets.glTF.url;\n  }\n  if ((obj as any).assets?.glb?.url) {\n    return (obj as any).assets.glb.url;\n  }\n  return null;\n};\n\nexport const getUsdzAssetUrl = (obj: RapiItem | RapiConfiguration): Nullable<string> => {\n  if ((obj as any).assets?.usdz?.url) {\n    return (obj as any).assets.usdz.url;\n  }\n  return null;\n};\n\nexport const hasArAssets = (item: RapiItem): boolean => {\n  return getGlbAssetUrl(item) !== null && getUsdzAssetUrl(item) !== null;\n};\n\nexport const formatPrice = (currencySymbol: Nullable<string>, price: Nullable<number>): Nullable<string> => {\n  if (typeof price !== 'number') {\n    return null;\n  }\n  const prefix = (currencySymbol) ? currencySymbol + ' ' : '';\n  return prefix + price.toLocaleString(undefined, {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n};\n// we choose to round to 4 decimals because basically we do not know\n// where to round... but we assume that we do not have decimals with\n// more than 4 decimals on purpose\nconst ROUNDING_DECIMALS = 4;\nexport const normalizeFloatingNumber = (num: number, decimals: number = ROUNDING_DECIMALS): number => {\n\n  if (num % 1 === 0) {\n    return num;\n  }\n\n  const factor = (decimals !== ROUNDING_DECIMALS) ? Math.pow(10, decimals) : 10000;\n  return Math.round((num + Number.EPSILON) * factor) / factor;\n};\n\nexport const checkForActivePackage = (tenant: RapiTenant): boolean => {\n  if (!tenant.packages || !tenant.packages.length) {\n    return false;\n  }\n  /* as any because SDK does not type correctly */\n  return !!tenant.packages.find((activePackage: any) => activePackage.package !== 'tenant_free');\n};\n\nexport const oneTimeInterval = (callback: () => void, delay: number) => {\n  const intervalId = window.setInterval(() => {\n    callback();\n    clearInterval(intervalId);\n  }, delay);\n  return intervalId;\n};\n\n// this is basically to make tests working because in all other situations we have a polyfill\nexport const runOnIdle = !(window as any).requestIdleCallback ? (callback: () => Promise<void>) => callback() : (window as any).requestIdleCallback;\n\nexport const createShareLinkFromUrl = (url: string) => {\n  let actualUrl = url;\n  const separator = actualUrl.includes('?') ? '&' : '?';\n  const idQueryParam = 'id=';\n  const idQueryParamWithPlaceholder = idQueryParam + SHARE_PLACEHOLDER;\n  const hasId = actualUrl.includes(idQueryParam);\n  if (!hasId) {\n    actualUrl += separator + idQueryParamWithPlaceholder;\n  } else {\n    actualUrl = actualUrl.replace(new RegExp(idQueryParam + '[a-zA-Z0-9:_-]+'), idQueryParamWithPlaceholder);\n  }\n  return actualUrl;\n};\n\nexport const isLocationJestTest = () => location.href === 'http://localhost/';\n",
      "export const isInIframe = () => {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n};\nexport const useEmbeddingApi = () => {\n  if (window.location.href.includes('api=false')) {\n    return false;\n  }\n  return true;\n};\n\nexport const sameOrigin = () => {\n  try {\n    return !!window.parent.document;\n  } catch (e) {\n    return false;\n  }\n};\n"
    ],
    "sourceRoot": ""
  }