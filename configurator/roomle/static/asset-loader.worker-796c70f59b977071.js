if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let t=Promise.resolve();return s[e]||(t=new Promise(async t=>{if("document"in self){const s=document.createElement("script");s.src=e,document.head.appendChild(s),s.onload=t}else importScripts(e),t()})),t.then(()=>{if(!s[e])throw new Error(`Module ${e} didnâ€™t register its module`);return s[e]})},t=(t,s)=>{Promise.all(t.map(e)).then(e=>s(1===e.length?e[0]:e))},s={require:Promise.resolve(t)};self.define=(t,n,r)=>{s[t]||(s[t]=Promise.resolve().then(()=>{let s={};const o={uri:location.origin+t.slice(1)};return Promise.all(n.map(t=>{switch(t){case"exports":return s;case"module":return o;default:return e(t)}})).then(e=>{const t=r(...e);return s.default||(s.default=t),s})}))}}define("./asset-loader.worker.js",["./worker-to-main-thread-57c27030"],(function(e){const t=(e,t)=>null!=e?"string"==typeof e?"true"===e:!0===e:("string"==typeof t&&(t=parseInt(t,10)),t>=200&&t<300);class s{constructor(){this._queue=[],this._pendingRequests=0}_nextSlot(){if(this._pendingRequests-=1,!this._queue.length)return;const{request:e,resolve:t,reject:s}=this._queue.shift();this._fetch(e).then(t,s)}_fetch(e,s={}){return this._pendingRequests+=1,new Promise((n,r)=>{self.fetch(e,s).then(function(e){if(this._nextSlot(),t(e.ok,e.status))n(...arguments);else{const t=(null==e?void 0:e.url)||"URL unknown";r(new Error(e.statusText||'Http error "'+(e&&e.status?e.status:"unknown")+'", for "'+t+'"'))}}.bind(this),e=>{this._nextSlot(),r(e)})})}fetch(e,t={}){return this._pendingRequests>=40?new Promise((t,s)=>this._queue.push({request:e,resolve:t,reject:s})):this._fetch(e,t)}}class n{constructor(e){this._networkLayer=e}loadAsset(e){return this._networkLayer.fetch(e).then(e=>e.blob()).then(e=>new Promise(t=>t(URL.createObjectURL(e)))).catch(e=>new Promise((t,s)=>s(e)))}}new class{constructor(){this._communicationInterface=new e.WorkerToMainThread(this)}onCommand(e,t,r){switch(e){case 1:this._loader=new n(new s),this._communicationInterface.sendToMainThread(4,t,[]);break;case 5:if(!this._loader)return;this._loader.loadAsset(r).then(e=>{this._communicationInterface.sendToMainThread(3,t,e)},e=>this._communicationInterface.sendToMainThread(2,t,{message:e.message}))}}}}));